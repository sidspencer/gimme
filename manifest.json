{
  "manifest_version": 2,
  "author": "thirdlogan",
  "homepage_url": "http://github.com/thirdlogan/gimme/",

  "name": "GimmeGimmeGimme",
  "short_name": "gimme",
  "version": "0.4.14",
  "description": "A downloader that presents a list of matching media for 'scrape' operations (all images directly on the page), or for 'dig' operations (Finding the full-sized image of each thumbnail in the gallery), or for a 'dig dig' (a gallery whose thumbnails link to other galleries, such that each must be 'dug'). Unlike other gallery downloaders, with Gimme you don't have to supply a CSS or XPath description of a gallery. However, If you want to, or you download galleries from the site frequently, you can set the CSS selector description and avoid any other processing. GimmeGimmeGimme as a very powerful set of heuristics learned by observing real galleries across the internet, as well as TensorFlow MobileNet ML/AI. The UI is ugly at best, but it works really well. Named in honor of Black Flag's song, Gimme Gimme Gimme...",
D
  "incognito": "spanning",  
  "offline_enabled": true,

  "browser_specific_settings": {
    "gecko": {
      "id": "{f00d69fc-7fb7-4959-adcd-6fe3cd0cba09}"
    }
  },

  "icons": {
    "16": "media/icon16.png",
    "24": "media/icon24.png",
    "32": "media/icon32.png",
    "48": "media/icon48.png",
    "64": "media/icon64.png",
    "128": "media/icon128.png"
  },

  "background": {
    "page": "background/background.html"
  },

  "content_scripts" : [
    {
      "matches": [
        "<all_urls>"
      ],
      "js": [
        "content/bundle.js"
      ],
      "all_frames": true
    }
  ],

  "browser_action": {
    "default_icon": {
      "16": "media/icon16.png",
      "24": "media/icon24.png",
      "32": "media/icon32.png",
      "48": "media/icon48.png",
      "64": "media/icon64.png",
      "128": "media/icon128.png"
    },
    "default_title": "GimmeGimmeGimme",
    "default_popup": "popup/popup.html"
  },

  "options_ui": {
      "page": "options/options.html",
      "open_in_tab": true
  },

  "permissions": [
    "activeTab",
    "webRequest",
    "downloads",
    "storage",
    "*://*/*"
  ],

  "web_accessible_resources": [
    "content/*.js",
    "baselibs/*.js",
    "options/*.js",
    "background/*.js",
    "popup/*.js",
    "popup/*.js.map",
    "background/*.js.map",
    "options/*.js.map",
    "content/*.js.map",
    "baselibs/*.js.map",
    "node_modules/@tensorflow/tfjs-core/dist/tf-core.esm.js",
    "node_modules/@tensorflow/tfjs-core/dist/tf-core.esm.js.map",
    "node_modules/@tensorflow/tfjs/dist/tf.esm.js.map",
    "node_modules/@tensorflow/tfjs/dist/tf.esm.js",
    "node_modules/@tensorflow/tfjs/dist/tf.js",
    "node_modules/@tensorflow/tfjs/dist/tf.js.map",
    "node_modules/@tensorflow/tfjs-data/dist/tf-data.esm.js",
    "node_modules/@tensorflow/tfjs-data/dist/tf-data.esm.js.map",
    "node_modules/@tensorflow/tfjs-layers/dist/tf-layers.esm.js",
    "node_modules/@tensorflow/tfjs-layers/dist/tf-layers.esm.js.map",
    "node_modules/@tensorflow/tfjs-converter/dist/tf-converter.esm.js",
    "node_modules/@tensorflow/tfjs-converter/dist/tf-converter.esm.js.map",
    "node_modules/@tensorflow-models/mobilenet/dist/mobilenet.esm.js",
    "node_modules/jszip/dist/jszip.js"
  ],

  "content_security_policy": "script-src 'self' https://ajax.googleapis.com https://cdn.jsdelivr.net https://storage.googleapis.com/; object-src 'self'"
}
